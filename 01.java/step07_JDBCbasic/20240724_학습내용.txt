JDBC API 활용 기술

1. db연동 표준 API
2. jdk 내장된 API
3. 필수 학문
	sql + java = db연동 프로그램
	- dbeaver java로 구현된 db 연동 프로그램
4. 개발환경
	1. RDBMS
		1. vb < ubuntu < mysql
		2. vb < ubuntu < docker < oracle
						 docker < nginx
						 docker < tomcat 
	2. DB연동 driver
		- oracle db 연동시 oracle driver
		- mysql db연동시 mysql driver
		: 개발자 관점에서 동일한 코드로 db의 ip/id/pw만으로
		해당 db 표준코드로 작업
		
5. 개발 단계 - DB는 정상 구동중
	1 단계 - driver를 로딩(메모리에 저장, 인스톨)	
	2 단계 - 특정 db에 접속 가능한 자바 객체를 생성
			- DriverManager API에게 요청
	3 단계 - sql문장 작성해서 실행가능한 문장 객체 생성
			- 특정 DB 접속 객체로 부터 생성해야만 해당 DB와 소통
	4 단계 - sql문장 실행 및 결과 활용
			DDL/DML
			DDL(create/drop/alter)는 가급적 sql문장으로 개발 권장
			DML
				select - table 구조의 결과 집합(resultset)
				insert/update/delete - int값 반환
				
				ResultSet executeQuery("select){}
				int executeUpdate("insert/update/delete"){}
	5 단계 - db 접속 해제
		자원 해제, 필수 작업
			
6. 경우의 수 도출
	- emp table 데이터 crud하는 프로그램 앱 개발
	- 한사람의 직원 정보 검색하는 로직
		경우의 수 1 : 어떤 값으로 검색? empno
		
		경우의 수 2 : 검색 기준 데이터가 있을수도? 없을 수도?
					정상 실행 단 데이터 입력 오류
					검색된 데이터 응답
					
		경우의 수 3 : 개발시 sql문법 오류로 개발 ..
					컴파일 가능 단 실행시 문제 발생
					
		경우의 수 4 : DB 시스템 장애? WAS 장애 .?